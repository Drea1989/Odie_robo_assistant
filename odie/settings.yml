---
# ---------------------------
# odie default settings
# Use YAML syntax
# ---------------------------

# ---------------------------
# Wakeon
# ---------------------------
# This is the wakeon that will catch your magic work to wake up odie
default_wakeon: "snowboy"

# Wakeon engine configuration
# Available engine are:
# - snowboy
wakeons:
  - snowboy:
      pmdl_file: "wakeon/snowboy/resources/odie-en-1samples.pmdl"


# ---------------------------
# Speech to text
# ---------------------------

# This is the STT that will be used by default
default_speech_to_text: "odiestt"

# Speech to text options
#recognition_options:
#  energy_threshold: 4000
#  adjust_for_ambient_noise_second: 1


# Speech to Text engines configuration
# Available engine are:
# - odie_stt (via remote server)

speech_to_text:
  - odiestt:
      language: "en-US"

# ---------------------------
# Text to speech
# ---------------------------
# This is the default TTS that will be used by odie to talk.
default_text_to_speech: "pico2wave"
# where we store generated audio files from TTS engine to reuse them
cache_path: "/tmp/odie_tts_cache"

# Text to Speech engines configuration
# Available engine are:
# - pico2wave
# - acapela     # MP3
# - googletts   # MP3
# - voicerss    # MP3
text_to_speech:
  - pico2wave:
      language: "en-US"
      cache: True
  - acapela:
      language: "english-uk"
      voice: "Peter"
      cache: True
  - googletts:
      language: "en"
      cache: True
  - voicerss:
      language: "en-US"
      cache: True

# ---------------------------
# players
# ---------------------------
# This is the sound player that will be used by default
default_player: "mplayer"

# players configuration
# Available engine are:
# - mplayer
# - pyalsaaudio       # no mp3
# - pyaudioplayer     # no mp3
# - sounddeviceplayer # no mp3
players:
  - mplayer: {}
  - pyalsaaudio:
     device: "default"
     convert_to_wav: True
  - pyaudioplayer:
     convert_to_wav: True
  - sounddeviceplayer:
     convert_to_wav: True

# ---------------------------
# Wake up answers
# ---------------------------
# When odie detect the hotword/wakeon, he will select randomly a phrase in the following list
# to notify the user that he's listening for orders
random_wake_up_answers:
  - "yes?"
  - "how can i help?"
  - "what do you want me to do"
  - "i am listening"

# You can play a sound when odie detect the hotword/wakeon instead of saying something from
# the `random_wake_up_answers`.
# Place here the full path of the sound file or just the name of the file in /usr/lib/odie/sounds
# The file must be .wav or .mp3 format. By default two file are provided: ding.wav and dong.wav
#random_wake_up_sounds:
#  - "sounds/ding.wav"
#  - "sounds/dong.wav"
  # - "/my/personal/full/path/my_file.mp3"


# ---------------------------
# On ready notification
# ---------------------------
# This section is used to notify the user when odie is waiting for a wakeon detection by playing a sound or speak a sentence out loud

# This parameter define if you play the on ready answer:
# - always: every time odie is ready to be awaken
# - never: never play a sound or sentences when odie is ready
# - once: at the first start of odie
play_on_ready_notification: once

# The on ready notification can be a sentence. Place here a sentence or a list of sentence. If you set a list, one sentence will be picked up randomly
on_ready_answers:
  - "odie is ready"
  - "Waiting for order"

# You can play a sound instead of a sentence.
# Remove the `on_ready_answers` parameters by commenting it out and use this one instead.
# Place here the path of the sound file. Files must be .wav or .mp3 format.
on_ready_sounds:
  - "sounds/ding.wav"
  - "sounds/dong.wav"


# ---------------------------
# Rest API
# ---------------------------
rest_api:
  active: False
  port: 5000
  password_protected: True
  login: admin
  password: secret
  allowed_cors_origin: False

# ---------------------------
# Default neuron
# ---------------------------
# Specify an optional default neuron response in case your order is not found.
default_neuron: "default-neuron"

# ---------------------------
# PostgreSQL settings
# ---------------------------
# Specify connection parameters to PostgreSQL
postgres:
  host: localhost
  port: 5432
  database: odie
  user : admin
  password: secret

# ---------------------------
# Alphabot settings
# ---------------------------
# Specify parameters
alphabot:
  enable: True 
# ---------------------------
# Cloud settings
# ---------------------------
# Specify parameters
cloud:
  - speech:
      model: "/home/drea/odie_cloud/deepspeech/new_speech_33.prm"
  - caption:
      TFhost: "localhost"
      TFport: 9000


# ---------------------------
# Resource directory path
#
# Accepted types :
#   - neuron
#   - stt
#   - tts
#   - wakeon  /!\ wakeon is still beta...
#   - cue
# ---------------------------
#resource_directory:
#  neuron: "/var/tmp/resources/neurons"
#  stt: "resources/stt"
#  tts: "resources/tts"
#  wakeon: "resources/wakeon"
#  cue: "resources/cue"

# ---------------------------
# Global files variables
# /!\ If a variable is defined in different files, the last file defines the value.
# ---------------------------
#var_files:
#  - variables.yml
#  - variables2.yml

# ---------------------------
# Raspberry Pi GPIO settings
# ---------------------------
# not used because connected to the alphabot2
#rpi:
#  pin_mute_button: 24
#  pin_led_started: 23
#  pin_led_muted: 17
#  pin_led_talking: 27
#  pin_led_listening: 22
